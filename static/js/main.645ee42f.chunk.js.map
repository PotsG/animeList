{"version":3,"sources":["components/common/animeOverview.js","components/animeRender.js","App.js","reportWebVitals.js","index.js"],"names":["AnimeOverview","props","data","loading","className","map","item","idx","attributes","src","posterImage","original","medium","alt","canonicalTitle","description","AnimeRender","useState","setLoading","items","setItems","pageCount","setPageCount","itemOffset","setItemOffset","totalCount","useRef","itemsPerPage","useEffect","fetchData","a","console","log","url","limit","fetch","method","headers","Accept","response","json","current","meta","count","Math","ceil","Fragment","pageClassName","pageLinkClassName","activeLinkClassName","previousLinkClassName","nextLinkClassName","disabledClassName","disabledLinkClassName","onPageChange","event","newOffset","selected","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0CeA,EA1CO,SAACC,GACtB,IAAQC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OACC,8BACEA,EACA,qBAAKC,UAAU,6BAAf,wBAEAF,GACC,qBAAKE,UAAU,0CAAf,SACEF,EAAKG,KAAI,SAACC,EAAMC,GAChB,IAAQC,EAAeF,EAAfE,WACR,OACC,sBAAeJ,UAAU,aAAzB,UACC,qBAAKA,UAAU,WAAf,SACC,qBACCA,UAAU,WACVK,IACCD,EAAWE,YAAYC,SACpBH,EAAWE,YACVC,SACDH,EAAWE,YACVE,OAELC,IAAI,kBAGN,oBAAIT,UAAU,yCAAd,SACEI,EAAWM,iBAEb,mBAAGV,UAAU,eAAb,SACEI,EAAWO,gBAlBJR,WCuDHS,EA/DK,WACnB,MAA8BC,oBAAS,GAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAA0BD,mBAAS,MAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,mBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoCL,mBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACMC,EAAaC,iBAAO,GACpBC,EAAeD,iBAAO,GAsC5B,OA1BAE,qBAAU,WACT,IAAMC,EAAS,uCAAG,kCAAAC,EAAA,6DACjBC,QAAQC,IAAI,SAENC,EAHW,sDAEXC,EAAQ,GAFG,yBAGgEX,GAHhE,SAIMY,MAAMF,EAAK,CACjCG,OAAQ,MACRC,QAAS,CACRC,OAAQ,2BACR,eAAgB,8BARD,cAIXC,EAJW,gBAYEA,EAASC,OAZX,OAYXtC,EAZW,OAajBuB,EAAWgB,QAAUvC,EAAKwC,KAAKC,MAC/BhB,EAAac,QAAUP,EAEvBd,EAASlB,EAAKA,MACdoB,EAAasB,KAAKC,KAAKpB,EAAWgB,QAAUd,EAAac,UACzDvB,GAAW,GAlBM,4CAAH,qDAsBfW,MACE,CAACN,IAGH,eAAC,IAAMuB,SAAP,WACC,cAAC,EAAD,CAAe5C,KAAMiB,EAAOhB,QAASA,IACrC,cAAC,IAAD,CACCkB,UAAWA,EACXjB,UAAU,aACV2C,cAAc,kBACdC,kBAAkB,kBAClBC,oBAAoB,yBACpBC,sBAAsB,kBACtBC,kBAAkB,kBAClBC,kBAAkB,sBAClBC,sBAAsB,sBACtBC,aAjDqB,SAACC,GACxBxB,QAAQC,IAAIP,GACZ,IAAM+B,EACJD,EAAME,SAAW9B,EAAac,QAAWhB,EAAWgB,QACtDV,QAAQC,IAAR,qCAC+BuB,EAAME,SADrC,6BACkED,IAElEhC,EAAcgC,UCPDE,EARH,WACX,OACC,sBAAMtD,UAAU,mBAAhB,SACC,cAAC,EAAD,OCKYuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.645ee42f.chunk.js","sourcesContent":["const AnimeOverview = (props) => {\r\n\tconst { data, loading } = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div className='text-center text-green-500'>loading...</div>\r\n\t\t\t) : (\r\n\t\t\t\tdata && (\r\n\t\t\t\t\t<div className='grid grid-cols-5 gap-4 max-w-7xl m-auto'>\r\n\t\t\t\t\t\t{data.map((item, idx) => {\r\n\t\t\t\t\t\t\tconst { attributes } = item;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={idx} className='anime-card'>\r\n\t\t\t\t\t\t\t\t\t<div className='img-wrap'>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='img-full'\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\tattributes.posterImage.original\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? attributes.posterImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.original\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: attributes.posterImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.medium\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\talt='Anime Cover'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<h2 className='text-center font-semibold mb-4 text-lg'>\r\n\t\t\t\t\t\t\t\t\t\t{attributes.canonicalTitle}\r\n\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t<p className='line-clamp-3'>\r\n\t\t\t\t\t\t\t\t\t\t{attributes.description}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AnimeOverview;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport AnimeOverview from './common/animeOverview';\r\n\r\nconst AnimeRender = () => {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [items, setItems] = useState(null);\r\n\tconst [pageCount, setPageCount] = useState(0);\r\n\tconst [itemOffset, setItemOffset] = useState(0);\r\n\tconst totalCount = useRef(0);\r\n\tconst itemsPerPage = useRef(0);\r\n\r\n\tconst handlePageClick = (event) => {\r\n\t\tconsole.log(totalCount);\r\n\t\tconst newOffset =\r\n\t\t\t(event.selected * itemsPerPage.current) % totalCount.current;\r\n\t\tconsole.log(\r\n\t\t\t`User requested page number ${event.selected}, which is offset ${newOffset}`\r\n\t\t);\r\n\t\tsetItemOffset(newOffset);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconsole.log('fetch');\r\n\t\t\tconst limit = 10;\r\n\t\t\tconst url = `https://kitsu.io/api/edge/anime?page[limit]=${limit}&page[offset]=${itemOffset}`;\r\n\t\t\tconst response = await fetch(url, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: 'application/vnd.api+json',\r\n\t\t\t\t\t'Content-Type': 'application/vnd.api+json',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\ttotalCount.current = data.meta.count;\r\n\t\t\titemsPerPage.current = limit;\r\n\r\n\t\t\tsetItems(data.data);\r\n\t\t\tsetPageCount(Math.ceil(totalCount.current / itemsPerPage.current));\r\n\t\t\tsetLoading(false);\r\n\r\n\t\t\t//TODO create handleButton Click with new call\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [itemOffset]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<AnimeOverview data={items} loading={loading} />\r\n\t\t\t<ReactPaginate\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tclassName='pagination'\r\n\t\t\t\tpageClassName='pagination-item'\r\n\t\t\t\tpageLinkClassName='pagination-link'\r\n\t\t\t\tactiveLinkClassName='pagination-link-active'\r\n\t\t\t\tpreviousLinkClassName='pagination-prev'\r\n\t\t\t\tnextLinkClassName='pagination-next'\r\n\t\t\t\tdisabledClassName='pagination-disabled'\r\n\t\t\t\tdisabledLinkClassName='pagination-disabled'\r\n\t\t\t\tonPageChange={handlePageClick}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default AnimeRender;\r\n","import './App.css';\r\nimport AnimeRender from './components/animeRender';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<main className='container m-auto'>\r\n\t\t\t<AnimeRender />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}